/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import java.awt.Color;
import java.beans.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.Date;
import javax.swing.JTextField;

/**
 *
 * @author drago
 */
public class SignUp extends javax.swing.JFrame {

    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
        ((JTextField) dt_Birthday.getDateEditor().getUiComponent()).setEditable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        txt_Username = new javax.swing.JTextField();
        rdo_Male = new javax.swing.JRadioButton();
        rdo_Female = new javax.swing.JRadioButton();
        rdo_NoGender = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        btn_SignUp = new javax.swing.JButton();
        btn_SignIn = new javax.swing.JButton();
        txt_Phone = new javax.swing.JTextField();
        txt_Email = new javax.swing.JTextField();
        txt_Password = new javax.swing.JTextField();
        txt_FullName = new javax.swing.JTextField();
        dt_Birthday = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_Username.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_Username.setForeground(new java.awt.Color(153, 153, 153));
        txt_Username.setText("Username");
        txt_Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grr(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_UsernameFocusLost(evt);
            }
        });
        txt_Username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_UsernameMouseClicked(evt);
            }
        });

        buttonGroup1.add(rdo_Male);
        rdo_Male.setText("Male");

        buttonGroup1.add(rdo_Female);
        rdo_Female.setText("Female");

        buttonGroup1.add(rdo_NoGender);
        rdo_NoGender.setText("No Gender");

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 48)); // NOI18N
        jLabel1.setText("Register");

        btn_SignUp.setText("Sign Up");
        btn_SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SignUpActionPerformed(evt);
            }
        });

        btn_SignIn.setText("Sign In");
        btn_SignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SignInActionPerformed(evt);
            }
        });

        txt_Phone.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_Phone.setForeground(new java.awt.Color(153, 153, 153));
        txt_Phone.setText("Phone Number");
        txt_Phone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PhoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PhoneFocusLost(evt);
            }
        });

        txt_Email.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_Email.setForeground(new java.awt.Color(153, 153, 153));
        txt_Email.setText("Email");
        txt_Email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_EmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_EmailFocusLost(evt);
            }
        });

        txt_Password.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_Password.setForeground(new java.awt.Color(153, 153, 153));
        txt_Password.setText("Password");
        txt_Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_PasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_PasswordFocusLost(evt);
            }
        });

        txt_FullName.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_FullName.setForeground(new java.awt.Color(153, 153, 153));
        txt_FullName.setText("Full Name");
        txt_FullName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_FullNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_FullNameFocusLost(evt);
            }
        });

        dt_Birthday.setDateFormatString("y-MM-d");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(rdo_Male, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdo_Female, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdo_NoGender, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txt_Password))
                            .addComponent(btn_SignIn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_SignUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_Phone)
                            .addComponent(txt_Email)
                            .addComponent(txt_FullName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dt_Birthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txt_FullName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_Male)
                    .addComponent(rdo_Female)
                    .addComponent(rdo_NoGender))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dt_Birthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(txt_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_Email, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_SignUp)
                .addGap(18, 18, 18)
                .addComponent(btn_SignIn)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void grr(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grr

        if (txt_Username.getText().equals("Username")) {
            txt_Username.setText("");
            txt_Username.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_grr

    private void txt_UsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_UsernameFocusLost
        if (txt_Username.getText().equals("")) {
            txt_Username.setText("Username");
            txt_Username.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_UsernameFocusLost

    private void txt_PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PasswordFocusGained
        if (txt_Password.getText().equals("Password")) {
            txt_Password.setText("");
            txt_Password.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txt_PasswordFocusGained

    private void txt_PasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PasswordFocusLost
        // TODO add your handling code here:
        if (txt_Password.getText().equals("")) {
            txt_Password.setText("Password");
            txt_Password.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_PasswordFocusLost

    private void txt_PhoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PhoneFocusGained
        // TODO add your handling code here:
        if (txt_Phone.getText().equals("Phone Number")) {
            txt_Phone.setText("");
            txt_Phone.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txt_PhoneFocusGained

    private void txt_PhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_PhoneFocusLost
        if (txt_Phone.getText().equals("")) {
            txt_Phone.setText("Phone Number");
            txt_Phone.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_PhoneFocusLost

    private void txt_EmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_EmailFocusGained
        if (txt_Email.getText().equals("Email")) {
            txt_Email.setText("");
            txt_Email.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txt_EmailFocusGained

    private void txt_EmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_EmailFocusLost
        if (txt_Email.getText().equals("")) {
            txt_Email.setText("Email");
            txt_Email.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_EmailFocusLost

    private void txt_UsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_UsernameMouseClicked

    }//GEN-LAST:event_txt_UsernameMouseClicked

    private void btn_SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SignUpActionPerformed

        String username = txt_Username.getText().trim();
        String password = txt_Password.getText().trim();
        String fullname = txt_FullName.getText().trim();
        String gender = null;
        if (rdo_Male.isSelected()) {
            gender = rdo_Male.getText().trim();
        } else if (rdo_Female.isSelected()) {
            gender = rdo_Female.getText().trim();
        }
        Date birthday = dt_Birthday.getDate();

        String phone = txt_Phone.getText().trim();
        String Email = txt_Email.getText().trim();

        //   Kiểm tra nhập liệu
        if (!validateInput(username, password, fullname, birthday, phone, Email)) {
            return;
        }

        //  Kiểm tra username trùng
        if (isUsernameTaken(username)) {
            JOptionPane.showMessageDialog(rootPane, "Username already exists. Please choose another one.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String insertQuery = "INSERT INTO HocVien (Name, Gender, Birthday, SDT, Email) VALUES (?, ?, ?, ?, ?)";
        try (Connection con = DriverManager.getConnection("jdbc:sqlserver://Tempest:1433;databasename=DU_AN_MAU;trustServerCertificate=true;user=sa;password=123456"); PreparedStatement stmt = con.prepareStatement(insertQuery, PreparedStatement.RETURN_GENERATED_KEYS)) { // 🔥 Sửa đây

            stmt.setString(1, fullname);
            stmt.setString(2, gender);
            stmt.setDate(3, new java.sql.Date(birthday.getTime()));
            stmt.setString(4, phone);
            stmt.setString(5, Email);

            int affectedRows = stmt.executeUpdate(); // Chạy câu lệnh INSERT
            if (affectedRows == 0) {
                throw new SQLException("Creating user failed, no rows affected.");
            }

            try (ResultSet rs = stmt.getGeneratedKeys()) {
                if (rs.next()) {
                    int maHV = rs.getInt(1); // Lấy MaHV tự động sinh
                    System.out.println("Inserted ID: " + maHV);

                    // Bây giờ chèn vào bảng TaiKhoan
                    String insertTaiKhoanQuery = "INSERT INTO TaiKhoan (MaHV, Username, Password) VALUES (?, ?, ?)";
                    try (PreparedStatement insertTaiKhoanStmt = con.prepareStatement(insertTaiKhoanQuery)) {
                        insertTaiKhoanStmt.setInt(1, maHV);
                        insertTaiKhoanStmt.setString(2, username);
                        insertTaiKhoanStmt.setString(3, password);
                        insertTaiKhoanStmt.executeUpdate();
                    }
                } else {
                    throw new SQLException("Creating user failed, no ID obtained.");
                }
            }

            JOptionPane.showMessageDialog(rootPane, "Sign up successful!", "Success", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btn_SignUpActionPerformed

    private void txt_FullNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_FullNameFocusGained
        if (txt_FullName.getText().equals("Full Name")) {
            txt_FullName.setText("");
            txt_FullName.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_txt_FullNameFocusGained

    private void txt_FullNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_FullNameFocusLost
        if (txt_FullName.getText().equals("")) {
            txt_FullName.setText("Full Name");
            txt_FullName.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txt_FullNameFocusLost

    private void btn_SignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SignInActionPerformed
        SignIn signin = new SignIn();
        signin.setVisible(true);
        dispose();
    }//GEN-LAST:event_btn_SignInActionPerformed

    private boolean validateInput(String username, String password, String fullname, Date birthday, String phone, String email) {
        if (username.isEmpty() || password.isEmpty() || phone.isEmpty() || email.isEmpty() || fullname.isEmpty() || birthday == null) {
            JOptionPane.showMessageDialog(this, "Hãy điền đầy đủ thông tin", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // 2. Kiểm tra mật khẩu: Ít nhất 1 chữ hoa, 1 số, tối đa 25 ký tự
        if (!password.matches("^(?=.*[A-Z])(?=.*\\d).{1,25}$")) {
            JOptionPane.showMessageDialog(this, "Mật khẩu phải có ít nhất một chữ hoa, một số và tối đa 25 ký tự!");
            return false;
        }

        // 3. Kiểm tra số điện thoại VN (Bắt đầu bằng 0, có 10 số)
        if (!phone.matches("^0\\d{9}$")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 chữ số và bắt đầu bằng 0!");
            return false;
        }

        // 4. Kiểm tra email (phải có @ và đúng định dạng)
        if (!email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$")) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
            return false;
        }
        return true;
    }

    private boolean isUsernameTaken(String username) {
        String checkQuery = "SELECT COUNT(*) FROM TaiKhoan WHERE Username = ?";
        try (Connection con = DriverManager.getConnection("jdbc:sqlserver://Tempest:1433;databasename=DU_AN_MAU;trustServerCertificate=true;user=sa;password=123456"); PreparedStatement stmt = con.prepareStatement(checkQuery)) {
            stmt.setString(1, username);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return rs.getInt(1) > 0;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_SignIn;
    private javax.swing.JButton btn_SignUp;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.toedter.calendar.JDateChooser dt_Birthday;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton rdo_Female;
    private javax.swing.JRadioButton rdo_Male;
    private javax.swing.JRadioButton rdo_NoGender;
    private javax.swing.JTextField txt_Email;
    private javax.swing.JTextField txt_FullName;
    private javax.swing.JTextField txt_Password;
    private javax.swing.JTextField txt_Phone;
    private javax.swing.JTextField txt_Username;
    // End of variables declaration//GEN-END:variables
}
